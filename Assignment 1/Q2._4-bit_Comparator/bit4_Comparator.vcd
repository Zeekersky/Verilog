$date
	Sun Feb 18 13:24:47 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module bit4_Comparator_TestBench $end
$var wire 1 ! lt $end
$var wire 1 " gt $end
$var wire 1 # eq $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$scope module gate1 $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( w_not_b [3:0] $end
$var wire 4 ) w_not_a [3:0] $end
$var wire 3 * w_lt_eq [2:0] $end
$var wire 4 + w_lt [3:0] $end
$var wire 3 , w_gt_eq [2:0] $end
$var wire 4 - w_gt [3:0] $end
$var wire 4 . w_eq [3:0] $end
$var wire 1 ! lt $end
$var wire 1 " gt $end
$var wire 1 # eq $end
$scope module eq_gate $end
$var wire 4 / a [3:0] $end
$var wire 1 0 w1 $end
$var wire 1 1 w2 $end
$var wire 1 # y $end
$upscope $end
$scope module gt_eq_gate1 $end
$var wire 4 2 a [3:0] $end
$var wire 1 3 w1 $end
$var wire 1 4 w2 $end
$var wire 1 5 y $end
$upscope $end
$scope module gt_eq_gate2 $end
$var wire 3 6 a [2:0] $end
$var wire 1 7 w1 $end
$var wire 1 8 y $end
$upscope $end
$scope module gt_eq_gate4 $end
$var wire 4 9 a [3:0] $end
$var wire 1 : w1 $end
$var wire 1 ; w2 $end
$var wire 1 " y $end
$upscope $end
$scope module lt_eq_gate1 $end
$var wire 4 < a [3:0] $end
$var wire 1 = w1 $end
$var wire 1 > w2 $end
$var wire 1 ? y $end
$upscope $end
$scope module lt_eq_gate2 $end
$var wire 3 @ a [2:0] $end
$var wire 1 A w1 $end
$var wire 1 B y $end
$upscope $end
$scope module lt_eq_gate4 $end
$var wire 4 C a [3:0] $end
$var wire 1 D w1 $end
$var wire 1 E w2 $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0E
0D
b0 C
0B
0A
b110 @
0?
1>
0=
b1110 <
0;
0:
b0 9
08
07
b110 6
05
14
03
b1110 2
11
10
b1111 /
b1111 .
b0 -
b0 ,
b0 +
b0 *
b111 )
b111 (
b1000 '
b1000 &
b1000 %
b1000 $
1#
0"
0!
$end
#10
1"
1;
0>
04
0#
b1000 9
00
01
b1000 -
b0 2
b0 6
b1 <
b1 @
b0 .
b0 /
b1000 (
b111 +
b111 %
b111 '
#20
1!
1D
0"
b1 C
0;
b1 *
1?
1=
1>
14
b0 9
11
b0 -
b1111 <
b1110 2
b110 6
b110 @
b1110 .
b1110 /
b110 (
b1 +
b1001 %
b1001 '
#30
0!
0D
1"
1;
b0 C
b0 *
0?
0>
04
b1000 9
0=
10
01
b10 @
b110 2
b10 6
b110 <
b111 .
b111 /
b1011 (
b0 +
b11 )
b1000 -
b100 %
b100 '
b1100 $
b1100 &
#40
1!
1E
0"
b1000 C
0;
b1000 +
b0 9
b11 (
b1011 )
b0 -
b1100 %
b1100 '
b100 $
b100 &
#50
