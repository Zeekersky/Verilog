$date
	Wed Feb 28 22:13:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module wallace_tree_multiplier_tb $end
$var wire 8 ! out [7:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$scope module ans $end
$var wire 4 $ A [3:0] $end
$var wire 4 % B [3:0] $end
$var wire 1 & w8 $end
$var wire 1 ' w7 $end
$var wire 1 ( w6 $end
$var wire 1 ) w5 $end
$var wire 1 * w4 $end
$var wire 1 + w30 $end
$var wire 1 , w3 $end
$var wire 1 - w29 $end
$var wire 1 . w28 $end
$var wire 1 / w27 $end
$var wire 1 0 w26 $end
$var wire 1 1 w25 $end
$var wire 1 2 w24 $end
$var wire 1 3 w23 $end
$var wire 1 4 w22 $end
$var wire 1 5 w21 $end
$var wire 1 6 w20 $end
$var wire 1 7 w2 $end
$var wire 1 8 w19 $end
$var wire 1 9 w18 $end
$var wire 1 : w17 $end
$var wire 1 ; w16 $end
$var wire 1 < w15 $end
$var wire 1 = w14 $end
$var wire 1 > w13 $end
$var wire 1 ? w12 $end
$var wire 1 @ w11 $end
$var wire 1 A w10 $end
$var wire 1 B w1 $end
$var wire 8 C out [7:0] $end
$var wire 5 D I3 [4:0] $end
$var wire 6 E I2 [5:0] $end
$var wire 7 F I1 [6:0] $end
$var wire 8 G I0 [7:0] $end
$scope begin genblk1[0] $end
$var parameter 2 H i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 I i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 J i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 K i $end
$upscope $end
$scope module f1 $end
$var wire 1 * Cout $end
$var wire 1 L I1 $end
$var wire 1 M sum $end
$var wire 1 7 I0 $end
$var wire 1 B Cin $end
$upscope $end
$scope module f10 $end
$var wire 1 N Cin $end
$var wire 1 4 Cout $end
$var wire 1 O I0 $end
$var wire 1 P I1 $end
$var wire 1 5 sum $end
$upscope $end
$scope module f11 $end
$var wire 1 2 Cout $end
$var wire 1 5 I0 $end
$var wire 1 Q I1 $end
$var wire 1 3 sum $end
$var wire 1 : Cin $end
$upscope $end
$scope module f12 $end
$var wire 1 1 Cout $end
$var wire 1 3 I0 $end
$var wire 1 R sum $end
$var wire 1 8 I1 $end
$var wire 1 6 Cin $end
$upscope $end
$scope module f13 $end
$var wire 1 S Cin $end
$var wire 1 / Cout $end
$var wire 1 T I0 $end
$var wire 1 U I1 $end
$var wire 1 0 sum $end
$upscope $end
$scope module f14 $end
$var wire 1 4 Cin $end
$var wire 1 - Cout $end
$var wire 1 0 I0 $end
$var wire 1 V I1 $end
$var wire 1 . sum $end
$upscope $end
$scope module f15 $end
$var wire 1 1 Cin $end
$var wire 1 + Cout $end
$var wire 1 . I0 $end
$var wire 1 2 I1 $end
$var wire 1 W sum $end
$upscope $end
$scope module f2 $end
$var wire 1 X Cin $end
$var wire 1 ( Cout $end
$var wire 1 Y I0 $end
$var wire 1 Z I1 $end
$var wire 1 ) sum $end
$upscope $end
$scope module f3 $end
$var wire 1 * Cin $end
$var wire 1 A Cout $end
$var wire 1 [ sum $end
$var wire 1 , I1 $end
$var wire 1 ' I0 $end
$upscope $end
$scope module f4 $end
$var wire 1 \ Cin $end
$var wire 1 ? Cout $end
$var wire 1 ] I0 $end
$var wire 1 ^ I1 $end
$var wire 1 @ sum $end
$upscope $end
$scope module f5 $end
$var wire 1 ( Cin $end
$var wire 1 = Cout $end
$var wire 1 @ I0 $end
$var wire 1 _ I1 $end
$var wire 1 > sum $end
$upscope $end
$scope module f6 $end
$var wire 1 A Cin $end
$var wire 1 < Cout $end
$var wire 1 > I0 $end
$var wire 1 ` sum $end
$var wire 1 & I1 $end
$upscope $end
$scope module f7 $end
$var wire 1 a Cin $end
$var wire 1 : Cout $end
$var wire 1 b I0 $end
$var wire 1 c I1 $end
$var wire 1 ; sum $end
$upscope $end
$scope module f8 $end
$var wire 1 ? Cin $end
$var wire 1 8 Cout $end
$var wire 1 ; I0 $end
$var wire 1 d I1 $end
$var wire 1 9 sum $end
$upscope $end
$scope module f9 $end
$var wire 1 < Cin $end
$var wire 1 6 Cout $end
$var wire 1 9 I0 $end
$var wire 1 = I1 $end
$var wire 1 e sum $end
$upscope $end
$scope module h1 $end
$var wire 1 B Cout $end
$var wire 1 f I0 $end
$var wire 1 g I1 $end
$var wire 1 h sum $end
$upscope $end
$scope module h2 $end
$var wire 1 , Cout $end
$var wire 1 i I0 $end
$var wire 1 j I1 $end
$var wire 1 7 sum $end
$upscope $end
$scope module h3 $end
$var wire 1 & Cout $end
$var wire 1 ) I0 $end
$var wire 1 k I1 $end
$var wire 1 ' sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 K
b10 J
b1 I
b0 H
$end
#0
$dumpvars
0k
0j
1i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
1[
1Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
1M
0L
b0 G
b0 F
b11 E
b0 D
b1100 C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
17
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
1)
0(
1'
0&
b100 %
b11 $
b100 #
b11 "
b1100 !
$end
#10
0`
1[
0M
0>
1'
0(
b1010 !
b1010 C
1h
07
1)
1g
0i
0Z
1X
b0 E
b101 F
b10 #
b10 %
b101 "
b101 $
#20
1`
0[
1>
0'
1@
0)
b10000 !
b10000 C
0h
0X
1^
0g
b100 E
b0 F
b100 #
b100 %
b100 "
b100 $
#30
0`
1[
0>
1M
1'
1)
0@
17
1h
b1111 !
b1111 C
1i
1f
1Z
0^
b11 G
b11 E
b101 #
b101 %
b11 "
b11 $
#40
0`
1[
0>
1'
0(
0h
1)
0f
1j
0Z
b1100 !
b1100 C
0i
1X
b0 G
b0 E
b110 F
b10 #
b10 %
b110 "
b110 $
#50
1W
1>
12
1[
b10011100 !
b10011100 C
1`
1@
1:
15
0)
07
1'
0&
1L
0X
1^
1b
0j
1k
1c
1O
b0 F
b1100 G
b1100 E
b1100 D
b1101 #
b1101 %
b1100 "
b1100 $
#60
11
1W
0[
0R
18
02
0>
0'
1&
13
1?
1)
1M
1;
0:
0@
b10010110 !
b10010110 C
1h
17
1\
1f
1j
1Z
1]
0L
0^
0b
b1010 F
b1010 G
b1010 E
b1010 D
b1111 #
b1111 %
b1010 "
b1010 $
#70
